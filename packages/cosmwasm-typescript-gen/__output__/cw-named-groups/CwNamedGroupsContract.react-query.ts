/**
* This file was automatically generated by cosmwasm-typescript-gen@0.2.14.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/

import { useQuery, UseQueryOptions } from "react-query";
import { DumpResponse, Group, InstantiateMsg, Addr, ListAddressesResponse, ListGroupsResponse } from "./CwNamedGroupsContract";
import { CwNamedGroupsQueryClient } from "./CwNamedGroupsContract.ts";
export interface CwNamedGroupsIsAddressInGroupQuery {
  client: CwNamedGroupsQueryClient;
  options?: UseQueryOptions<IsAddressInGroupResponse, Error, IsAddressInGroupResponse, (string | undefined)[]>;
  args: {
    address: string;
    group: string;
  };
}
export function useCwNamedGroupsIsAddressInGroupQuery({
  client,
  args,
  options
}: CwNamedGroupsIsAddressInGroupQuery) {
  return useQuery<IsAddressInGroupResponse, Error, IsAddressInGroupResponse, (string | undefined)[]>(["cwNamedGroupsIsAddressInGroup", client.contractAddress], () => client.isAddressInGroup({
    address: args.address,
    group: args.group
  }), options);
}
export interface CwNamedGroupsListAddressesQuery {
  client: CwNamedGroupsQueryClient;
  options?: UseQueryOptions<ListAddressesResponse, Error, ListAddressesResponse, (string | undefined)[]>;
  args: {
    group: string;
    limit?: number;
    offset?: number;
  };
}
export function useCwNamedGroupsListAddressesQuery({
  client,
  args,
  options
}: CwNamedGroupsListAddressesQuery) {
  return useQuery<ListAddressesResponse, Error, ListAddressesResponse, (string | undefined)[]>(["cwNamedGroupsListAddresses", client.contractAddress], () => client.listAddresses({
    group: args.group,
    limit: args.limit,
    offset: args.offset
  }), options);
}
export interface CwNamedGroupsListGroupsQuery {
  client: CwNamedGroupsQueryClient;
  options?: UseQueryOptions<ListGroupsResponse, Error, ListGroupsResponse, (string | undefined)[]>;
  args: {
    address: string;
    limit?: number;
    offset?: number;
  };
}
export function useCwNamedGroupsListGroupsQuery({
  client,
  args,
  options
}: CwNamedGroupsListGroupsQuery) {
  return useQuery<ListGroupsResponse, Error, ListGroupsResponse, (string | undefined)[]>(["cwNamedGroupsListGroups", client.contractAddress], () => client.listGroups({
    address: args.address,
    limit: args.limit,
    offset: args.offset
  }), options);
}
export interface CwNamedGroupsDumpQuery {
  client: CwNamedGroupsQueryClient;
  options?: UseQueryOptions<DumpResponse, Error, DumpResponse, (string | undefined)[]>;
}
export function useCwNamedGroupsDumpQuery({
  client,
  options
}: CwNamedGroupsDumpQuery) {
  return useQuery<DumpResponse, Error, DumpResponse, (string | undefined)[]>(["cwNamedGroupsDump", client.contractAddress], () => client.dump(), options);
}